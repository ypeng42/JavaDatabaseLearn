11/2
todo don't start too soon
todo 2d array
todo backward thinking! need practice
(1) SurroundedRegion -> 2h15m (failed), -> 20m (second try after reading approach)

11/3
todo input check
todo string&char api
todo practice way to do mutation, common theme in str related problem
todo still start before forming a complete alg
todo notice how permutation setting is init
(1) LetterCaseMutation -> 20m
(2) ArrayToBST -> 13m
todo review bst height, it's causing trouble when doing this
todo nest Math.max() to get max of 3 items
(3)DiameterBST -> 20m (not finished)
todo read problem carefully! Miss to notice how to handle 0 if it's the leading digit
todo do most necessary check first! ex. i < length, otherwise out of bound exception
todo forget to add a check for an edge case
todo inline parse str to number, char - '0' to get int, val *= 10 for each iteration
(4)WordAbbr -> 20m (failed)

11/4
todo https://github.com/awangdev/LintCode/blob/master/Java/Design%20Search%20Autocomplete%20System.java
todo String toCharArray
todo Map putIfAbsent, getOrDefault
todo inner class field make public so don't need stupid getter
todo var name as succiint as possible! char -> s, string type is s, current -> curr, freq, result -> rst
todo inline single if return
todo learn PriorityQueue
(1) Design Auto Search Complete System -> don't think ready, skipped
todo when doing charAt, always check index >= 0
todo backward thinking! It works!
(2) Back space string compare -> 30m (exceed time, but get the best solution )
todo review top-down vs bottom up recursion (left, right, curr  vs  left, right)
(3) BST Longest Consecutive
todo tuple is a good name!
(4) Kth smallest in sorted matrix
todo it's actually not bad, but when doing it, my brain just had no idea what's going on
todo when doing recursion, it's OK to have a class variable to track progress!! Or, use a 1 item array also works, see https://scyforce.gitbooks.io/leetcode/content/convert_binary_search_tree_to_sorted_doubly-linked_list.html
(5) BST to sorted DLL -> look up answer

11/5
todo thought when there are 2 parties, use 1 variable to track progress. 1 party ++, 1 party --
(1) design tic tac toe
todo Practice the trick of using running sum to get the sum of sub array + hashmap
todo differentiate between ctti 16.17 Contiguous sequence, which doesn't have a target K, so hashmap is bad
(2) max size sub array to sum k
todo just a horrible day, thought process about duplicate is a mess
(3) Two sum 3

11/6
todo https://github.com/awangdev/LintCode 133- 135
todo Pratice implement it in 5 mins
todo union(x,y) time is log(m*n)   https://en.wikipedia.org/wiki/Proof_of_O(log*n)_time_complexity_of_union%E2%80%93find
(1) union find 3 problems
todo idea related to SurroundedRegion

todo 2d array 三连
if (grid == null || grid.length == 0 || grid[0].length == 0) {
	return 0;
}

todo remember every point in a 2d array CAN be turned into a UNIQUE index (x * rowLength + y); rowLength = grid[0].length;
todo border check 4连, it's find to repeat a little, we prefer to have all border check logic in ONE place
x < 0 || x >= grid.length || y < 0 || y >= grid[0].length
(2) Num of Island

todo Math.max(max, size[i]); is better than the stupid if check to update max

todo practice dynamic programming on this, the nlogn is just impossible to come up
Longest increasing sequence

11/7
todo pad, prepend -> good name

11/9
todo word search 1, word search 2  (toCharArray), Letter Combinations of a Phone Number, permuatation (lvl.size = arr.size, common trick, new ArrayList<>(baselist) deep copy)

11/11
todo INT_MAX
todo int sindex = 0, tindex = 0, slen = s.length, tlen = t.length, start = -1, len = slen;
todo review AutoCompleteSystem, for find top X, don't need to build the whole queue first, keep the queue to size X is enough!!

11/12
todo be really careful with using Integer.MAX_VALUE, cause input might larger than that.
validateBST
todo backward thinking, if increase then decreasing is false, simple idea but powerful
monotonic array
todo for (col = left; col < right; col++), no need to declare int i
todo Be careful, after for loop, i will be +1, need to do -- to reset it after for loop
spiral array

11/13
todo word search 2's way is better c - 'a' to get index, hashmap is also fine i guess ( Map is more applicable to all chars, not limited to 256 ASCII)
class TrieNode {
        String word;
        TrieNode[] children;
        public TrieNode() {
            this.word = null;
            this.children = new TrieNode[26];
        }
    }

11/18
TODO don't use bfs for topo sort, always use dfs
alien dict

11/19
interview
populating next pointer in binary tree

11/22
todo idea: 2 pointers + set and replace
MoveZeros
todo for binary, curr pos = sum % 2 because carry over brings 2, carry = sum / 2, carry is how many 2 we have
AddBinary
todo ask enough questions before proceed
IntersactionTwoArray
todo for array, if solution may be >= n*n, try sorting it first, doesn't hurt
3sum
todo when doing position binary search, iterative approach is MUCH cleaner!
todo when doing binary search, be crystal clear, add if check to clarify logic, don't guess!
minSizeArray