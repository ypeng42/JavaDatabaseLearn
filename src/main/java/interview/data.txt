11/2
todo don't start too soon
todo 2d array
todo backward thinking! need practice
(1) SurroundedRegion -> 2h15m (failed), -> 20m (second try after reading approach)

11/3
todo input check
todo string&char api
todo practice way to do mutation, common theme in str related problem
todo still start before forming a complete alg
todo notice how permutation setting is init
(1) LetterCaseMutation -> 20m
(2) ArrayToBST -> 13m
todo review bst height, it's causing trouble when doing this
todo nest Math.max() to get max of 3 items
(3)DiameterBST -> 20m (not finished)
todo read problem carefully! Miss to notice how to handle 0 if it's the leading digit
todo do most necessary check first! ex. i < length, otherwise out of bound exception
todo forget to add a check for an edge case
todo inline parse str to number, char - '0' to get int, val *= 10 for each iteration
(4)WordAbbr -> 20m (failed)

11/4
todo https://github.com/awangdev/LintCode/blob/master/Java/Design%20Search%20Autocomplete%20System.java
todo String toCharArray
todo Map putIfAbsent, getOrDefault
todo inner class field make public so don't need stupid getter
todo var name as succiint as possible! char -> s, string type is s, current -> curr, freq, result -> rst
todo inline single if return
todo learn PriorityQueue
(1) Design Auto Search Complete System -> don't think ready, skipped
todo when doing charAt, always check index >= 0
todo backward thinking! It works!
(2) Back space string compare -> 30m (exceed time, but get the best solution )
todo review top-down vs bottom up recursion (left, right, curr  vs  left, right)
(3) BST Longest Consecutive
todo tuple is a good name!
(4) Kth smallest in sorted matrix
todo it's actually not bad, but when doing it, my brain just had no idea what's going on
todo when doing recursion, it's OK to have a class variable to track progress!! Or, use a 1 item array also works, see https://scyforce.gitbooks.io/leetcode/content/convert_binary_search_tree_to_sorted_doubly-linked_list.html
(5) BST to sorted DLL -> look up answer

11/5
todo thought when there are 2 parties, use 1 variable to track progress. 1 party ++, 1 party --
(1) design tic tac toe